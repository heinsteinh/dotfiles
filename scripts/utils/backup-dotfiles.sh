#!/bin/bash
# scripts/backup-dotfiles.sh
# Backup existing dotfiles before installation

set -e

BACKUP_DIR="$HOME/.dotfiles-backup"
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
VERSIONED_BACKUP_DIR="$BACKUP_DIR/$TIMESTAMP"

echo "Creating backup directory: $VERSIONED_BACKUP_DIR"
mkdir -p "$VERSIONED_BACKUP_DIR"

# Files to backup
declare -a FILES=(
    ".vimrc"
    ".tmux.conf"
    ".zshrc"
    ".zprofile"
    ".gitconfig"
    ".gitignore_global"
    ".p10k.zsh"
)

# Directories to backup
declare -a DIRS=(
    ".config/kitty"
    ".config/nvim"
    ".vim"
    ".tmux"
    ".oh-my-zsh/custom"
    ".ssh"
)

echo "Backing up dotfiles..."

# Backup individual files
for file in "${FILES[@]}"; do
    if [ -f "$HOME/$file" ]; then
        echo "Backing up $file"
        cp "$HOME/$file" "$VERSIONED_BACKUP_DIR/"
    fi
done

# Backup directories
for dir in "${DIRS[@]}"; do
    if [ -d "$HOME/$dir" ]; then
        echo "Backing up $dir"
        mkdir -p "$VERSIONED_BACKUP_DIR/$(dirname "$dir")"
        cp -r "$HOME/$dir" "$VERSIONED_BACKUP_DIR/$dir"
    fi
done

# Create a restore script
cat > "$VERSIONED_BACKUP_DIR/restore.sh" << 'EOF'
#!/bin/bash
# Restore script generated by backup-dotfiles.sh

BACKUP_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
echo "Restoring dotfiles from: $BACKUP_DIR"

# Restore files
for file in "$BACKUP_DIR"/.* "$BACKUP_DIR"/*; do
    filename=$(basename "$file")
    
    # Skip special files
    if [[ "$filename" == "." || "$filename" == ".." || "$filename" == "restore.sh" ]]; then
        continue
    fi
    
    # Skip .config directory (handled separately)
    if [[ "$filename" == ".config" ]]; then
        continue
    fi
    
    if [ -f "$file" ]; then
        echo "Restoring $filename to $HOME/"
        cp "$file" "$HOME/"
    fi
done

# Restore .config directories
if [ -d "$BACKUP_DIR/.config" ]; then
    echo "Restoring .config directory"
    cp -r "$BACKUP_DIR/.config"/* "$HOME/.config/" 2>/dev/null || true
fi

# Restore other directories
for dir in .vim .tmux .oh-my-zsh .ssh; do
    if [ -d "$BACKUP_DIR/$dir" ]; then
        echo "Restoring $dir"
        cp -r "$BACKUP_DIR/$dir" "$HOME/"
    fi
done

echo "Restore complete!"
echo "You may need to:"
echo "  - Restart your terminal"
echo "  - Run 'source ~/.zshrc'"
echo "  - Reinstall vim/tmux plugins"
EOF

chmod +x "$VERSIONED_BACKUP_DIR/restore.sh"

# Create a symlink to latest backup
rm -f "$BACKUP_DIR/latest"
ln -sf "$TIMESTAMP" "$BACKUP_DIR/latest"

# Create inventory file
cat > "$VERSIONED_BACKUP_DIR/inventory.txt" << EOF
Dotfiles Backup Inventory
Created: $(date)
Location: $VERSIONED_BACKUP_DIR

Backed up files:
EOF

find "$VERSIONED_BACKUP_DIR" -type f -not -name "inventory.txt" -not -name "restore.sh" | sort >> "$VERSIONED_BACKUP_DIR/inventory.txt"

echo ""
echo "Backup completed successfully!"
echo "Location: $VERSIONED_BACKUP_DIR"
echo "Latest backup: $BACKUP_DIR/latest"
echo ""
echo "To restore later, run:"
echo "  $VERSIONED_BACKUP_DIR/restore.sh"
echo ""
echo "To view backup contents:"
echo "  cat $VERSIONED_BACKUP_DIR/inventory.txt"